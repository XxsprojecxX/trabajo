// app/api/topicos/route.ts — handler limpio con BigQuery (JOIN a vw_posts_pilares)
import { NextRequest, NextResponse } from 'next/server';

export const runtime = 'nodejs'; // asegurar entorno Node en App Router

type Intensidad = 'alta' | 'media' | 'baja';

interface Topico {
  id: string;
  nombre: string;
  volumen: number;
  sentimiento: { positivo: number; neutral: number; negativo: number };
  emociones: {
    alegria: number; enojo: number; sorpresa: number; miedo: number; tristeza: number;
    nostalgia: number; ternura: number; orgullo: number; estres: number; culpa: number; cansancio: number;
  };
  engagement: number;
  oportunidad: number;
  x: number; y: number;
  conexiones: string[];
  categoria: string;
  ejesDetectados: string[];
  pilarAsociado: string;
  capitalSimbolicoDetectado: string[];
  nseInferido: string;
  contextoTerritorial: string;
  estadosResonancia: Array<{ estado: string; porcentaje: number; intensidad: Intensidad }>;
}

function normalizePilar(p: any): string {
  if (!p || typeof p !== 'string') return '';
  const k = p.trim().toLowerCase();
  if (k === 'dairy of real moms') return 'Dairy of Real Moms';
  if (k === 'recipes that hug') return 'Recipes that Hug';
  if (k === 'real family moments') return 'Real Family Moments';
  if (k === 'authentic treats') return 'Authentic Treats';
  return '';
}

function mapRowToTopico(r: any, i: number): Topico {
  const likes = Number(r.likes ?? r.like_count ?? 0);
  const comments = Number(r.comments_count ?? r.comment_count ?? 0);
  const volumen = likes + 3 * comments;

  // Sentimiento sintético por ahora (tu pipeline real puede reemplazarlo)
  const pos = Math.min(95, Math.round(50 + likes * 0.0001));
  const neg = Math.max(0, 100 - pos - 25);
  const neu = Math.max(0, 100 - pos - neg);

  const pilar = normalizePilar(r.pilar_normalizado ?? r.pilarNormalizado ?? r.pilarAsociado ?? r.pilar ?? '');

  return {
    id: String(r.post_id ?? r.id ?? `post-${i}`),
    nombre: String(r.text ?? r.caption ?? 'Tópico'),
    volumen,
    sentimiento: { positivo: pos, neutral: neu, negativo: neg },
    emociones: {
      alegria: 0, enojo: 0, sorpresa: 0, miedo: 0, tristeza: 0,
      nostalgia: 0, ternura: 0, orgullo: 0, estres: 0, culpa: 0, cansancio: 0,
    },
    engagement: Number((likes + comments) / 1000),
    oportunidad: 90 + ((i * 3) % 10),
    x: 200 + ((i * 120) % 600),
    y: 160 + ((i * 90) % 300),
    conexiones: [],
    categoria: String(r.source ?? 'General'),
    ejesDetectados: [],
    pilarAsociado: pilar,
    capitalSimbolicoDetectado: [],
    nseInferido: 'Mixto',
    contextoTerritorial: String(r.region ?? 'Mixto'),
    estadosResonancia: [],
  };
}

export async function GET(req: NextRequest) {
  try {
    // health/debug short-circuit
    const { searchParams } = new URL(req.url);
    if (searchParams.get('debug') === '1') {
      return NextResponse.json({ ok: true, route: '/api/topicos' }, { status: 200 });
    }

    

    // GMX: probe de fuentes individuales y del JOIN
    const probeSrc = searchParams.get('probe_src');
    if (probeSrc) {
      try {
        const { BigQuery } = await import('@google-cloud/bigquery');
        const bq = new BigQuery({
          projectId: 'galletas-piloto-ju-250726',
          keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS as string,
        });

        let q = '';
        if (probeSrc === 'social') {
          q = `
            SELECT post_id, text, create_time
            FROM \`galletas-piloto-ju-250726.gmx.vw_social_post_dashboard\`
            ORDER BY create_time DESC
            LIMIT 3
          `;
        } else if (probeSrc === 'pilares') {
          q = `
            SELECT id_post, pilar_normalizado FROM \`galletas-piloto-ju-250726.analisis_galletas.vw_posts_pilares\`
            LIMIT 3
          `;
        } else if (probeSrc === 'join') {
          q = `
            SELECT s.post_id, s.text, p.pilar_normalizado
            FROM \`galletas-piloto-ju-250726.gmx.vw_social_post_dashboard\` AS s LEFT JOIN \`galletas-piloto-ju-250726.analisis_galletas.vw_posts_pilares\` AS p ON s.post_id = p.id_post
            ORDER BY s.create_time DESC
            LIMIT 3
          `;
        } else {
          return NextResponse.json({ error: 'probe_src_invalid' }, { status: 400 });
        }

        const [rows] = await bq.query({ query: q, location: 'US' });
        return NextResponse.json({ probe_src: probeSrc, rows }, { status: 200 });
      } catch (e:any) {
        return NextResponse.json({ probe_src: probeSrc, error: String(e?.message || e), code: e?.code || null }, { status: 200 });
      }
    }
  // GMX: probe BigQuery connectivity
  if (searchParams.get('probe') === '1') {
    try {
      const { BigQuery } = await import('@google-cloud/bigquery');
      const bq = new BigQuery({
        projectId: 'galletas-piloto-ju-250726',
        keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS as string,
      });
      const [rows] = await bq.query({ query: 'SELECT 1 AS ok', location: 'US' });
      return NextResponse.json({
        probe: 'ok',
        projectId: 'galletas-piloto-ju-250726',
        keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS || null,
        rows
      }, { status: 200 });
    } catch (e:any) {
      return NextResponse.json({
        probe: 'error',
        message: String(e?.message || e),
        code: (e && e.code) || null,
        keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS || null
      }, { status: 200 });
    }
  }

  const limit = Math.min(Number(searchParams.get('limit') ?? 50), 200);

    // Import dinámico de BigQuery para evitar fallos en carga de módulo
    const { BigQuery } = await import('@google-cloud/bigquery');

    const bq = new BigQuery({
      projectId: 'galletas-piloto-ju-250726',
      keyFilename: process.env.GOOGLE_APPLICATION_CREDENTIALS as string,
    });

    // Fuente normalizada: JOIN vista de pilares con el dashboard social
    const query = `
      SELECT
        s.post_id,
        s.text,
        s.create_time,
        s.post_url,
        s.likes,
        s.comments_count,
        s.play_count,
        CAST(s.region AS STRING) AS region,
        s.source,
        p.pilar_normalizado
      FROM \`galletas-piloto-ju-250726.gmx.vw_social_post_dashboard\` AS s
      LEFT JOIN \`galletas-piloto-ju-250726.analisis_galletas.vw_posts_pilares\` AS p
      USING (post_id)
      ORDER BY s.create_time DESC
      LIMIT @lim
    `;

    const [rows] = await bq.query({ query, params: { lim: limit }, location: 'US' });

    const data: Topico[] = rows.map((r: any, i: number) => mapRowToTopico(r, i));

    // respuesta JSON simple y válida
    return NextResponse.json({ count: data.length, rows: data }, { status: 200 });

  } catch (e: any) {
    console.error('GMX /api/topicos error:', e?.stack || e);
    return NextResponse.json({ error: 'internal_error', message: String(e?.message || e) }, { status: 500 });
  }
}
